{"version":3,"sources":["decorators/task.ts"],"names":[],"mappings":";;AAAA,mCAAoC;AACpC,kCAA0C;AAM1C,SAAgB,IAAI,CAAC,MAAW,EAAE,GAAY;IAC1C,IAAI,MAAM,CAAC,KAAK,IAAI,mBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,UAAG,IAAI,GAAG,EAAE;QAC3E,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAAE,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;SAAE;QAC3C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QACvD,OAAO,MAAM,CAAC;KACjB;IACD,OAAO,UAAU,KAAU,EAAE,GAAW;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAAE,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;SAAE;QACzC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACrE,OAAO,KAAK,CAAC;IACjB,CAAC,CAAA;AACL,CAAC;AAXD,oBAWC","file":"../../decorators/task.js","sourcesContent":["import { isFunction } from 'lodash';\nimport { Gyi, TaskOption } from '../core';\n\nexport type GyiDecorator = <G extends Gyi>(proto: G, key: string) => void;\n\nexport function Task(option: TaskOption): GyiDecorator;\nexport function Task<G extends Gyi>(target: G, key: string): void;\nexport function Task(target: any, key?: string) {\n    if (target._root && isFunction(target._root) && target._root() === Gyi && key) {\n        if (!target.$tasks) { target.$tasks = []; }\n        target.$tasks.push({ action: target[key], name: key });\n        return target;\n    }\n    return function (proto: any, key: string) {\n        if (!proto.$tasks) { proto.$tasks = []; }\n        proto.$tasks.push({ action: proto[key], name: key, option: target });\n        return proto;\n    }\n}"]}