{"version":3,"sources":["libs/base.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAkC;AAUlC,MAAa,OAAO;IAOhB;QACI,IAAI,CAAC,IAAI,GAAG,cAAI,CAAC;IACrB,CAAC;IARM,MAAM,CAAC,KAAK;QACf,OAAO,OAAO,CAAC;IACnB,CAAC;IAQM,GAAG,CAAC,KAAwB,EAAE,GAAgB;QACjD,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IACrE,CAAC;IAEM,IAAI,CAA2B,WAAc,EAAE,OAA4B;QAC9E,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAC9C,CAAC;IAEM,IAAI,CAAC,MAAyC,EAAE,GAAiB;QACpE,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IACtE,CAAC;IAEM,GAAG;QACN,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IACrE,CAAC;CACJ;AA9BD,0BA8BC","file":"../../libs/base.js","sourcesContent":["import gulp, { Gulp } from 'gulp';\nimport { SrcOptions, DestOptions } from 'vinyl-fs';\n\nexport interface CoreLibTask {\n    src(globs: string | string[], opt?: SrcOptions): this;\n    pipe<T extends WritableStream>(destination: T, options?: { end?: boolean; }): this;\n    dest(folder: string, opt?: DestOptions): this;\n    run: () => Promise<any>;\n}\n\nexport class CoreLib implements CoreLibTask {\n    public static _root() {\n        return CoreLib;\n    }\n\n    protected gulp: Gulp | any;\n\n    constructor() {\n        this.gulp = gulp;\n    }\n\n    public src(globs: string | string[], opt?: SrcOptions): this {\n        throw new Error('pleace rewirte to CoreLibTask -> src method .');\n    }\n\n    public pipe<T extends WritableStream>(destination: T, options?: { end?: boolean; }): this {\n        if (this.gulp.pipe) {\n            this.gulp = this.gulp.pipe(destination, options);\n            return this;\n        }\n        throw new Error('don\\'t init src path .');\n    }\n\n    public dest(folder: string | ((file: File) => string), opt?: DestOptions): this {\n        throw new Error('pleace rewirte to CoreLibTask -> dest method .');\n    }\n\n    public run(): Promise<any> {\n        throw new Error('pleace rewirte to CoreLibTask -> run method .');\n    }\n}\n"]}